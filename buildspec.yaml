version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      #- aws ecr get-login-password
      #- $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URI=080835854471.dkr.ecr.us-east-1.amazonaws.com/ssi
      - echo $REPOSITORY_URI
      - echo $CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo $CODEBUILD_BUILD_ID
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - echo $IMAGE_TAG
      - echo $COMMIT_HASH
      - echo " Lista de Pastas"
      - ls -d
      - echo " "
      - folders=`ls -d */`
      - for value in $folders;
        do
            echo $value;
            VALUE1=$(echo $value )
            echo $VALUE1
        done
      - echo "## Build Done "
  build:
    commands:
      #- echo Build started on `date`
      #- echo Building the Docker image...
      #- docker build -t $REPOSITORY_URI:latest .
      - docker images
      #- docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      #- docker push $REPOSITORY_URI:latest
      #- docker push $REPOSITORY_URI:$IMAGE_TAG
      #- echo Writing image definitions file...
      #- printf '[{"name":"nodeapp","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      #- cat imagedefinitions.json 
artifacts:
    files: imagedefinitions.json